[
  {
    "objectID": "recommender.html",
    "href": "recommender.html",
    "title": "Movie-Recommendation Model",
    "section": "",
    "text": "Code for this webpage can be found here.\n\n\nCode\nimport pandas as pd\nimport numpy as np\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity\nfrom sklearn.preprocessing import MinMaxScaler\n\n\n\n\n\n\nCode\n# Load the cleaned movies dataframe\nmovies_df = pd.read_csv(\"./data/processed-data/movies_cleaned.csv\")\n\npd.set_option(\"display.max_columns\", None)\nmovies_df.head(5)\n\n\n\n\n\n\n\n\n\nIMDB_ID\nTitle\nYear\nRelease_Date\nRelease_Month\nAge_Rating\nOverview\nKeywords\nGenre\nDirector\nActors\nRuntime\nMetascore_Rating\nIMDB_Rating\nRotten_Tomatoes_Rating\nTMDB_Rating\nAverage_Rating\nWon_Award\nOscar_Wins\nOscar_Nominations\nBudget\nBudget_Normalized\nRevenue\nRevenue_Normalized\nReturn_On_Investment\nPopularity\n\n\n\n\n0\ntt0097499\nhenry v\n1989\n1989-10-05\nOctober\npg-13\ngritty adaption william shakespeares play engl...\n['france kingdom theater play based on true st...\nwar\nkenneth branagh\n['kenneth branagh derek jacobi simon shepherd']\n137\n8.3\n7.5\n9.8\n7.2\n8.200\nTrue\n1\n0\n9000000\n-0.873465\n10200000\n-0.801446\n1.133333\n18.771\n\n\n1\ntt1320253\nthe expendables\n2010\n2010-08-03\nAugust\nr\nbarney ross leads band highly skilled mercenar...\n['rescue sniper island martial arts tattoo esc...\nthriller\nsylvester stallone\n['sylvester stallone jason statham jet li']\n103\n4.5\n6.4\n4.2\n6.2\n5.325\nFalse\n0\n0\n80000000\n0.317499\n274470394\n0.188250\n3.430880\n74.573\n\n\n2\ntt1025100\ngemini man\n2019\n2019-10-02\nOctober\npg-13\nhenry brogan elite 51 year assassin whos ready...\n['hitman clone']\nthriller\nang lee\n['will smith mary elizabeth winstead clive owen']\n117\n3.8\n5.7\n2.7\n6.3\n4.625\nFalse\n0\n0\n140000000\n1.323948\n173469516\n-0.189999\n1.239068\n27.266\n\n\n3\ntt0473075\nprince of persia the sands of time\n2010\n2010-05-19\nMay\npg-13\nrogue prince reluctantly joins forces mysterio...\n['persia sandstorm brother against brother arm...\naction\nmike newell\n['jake gyllenhaal gemma arterton ben kingsley']\n116\n5.0\n6.5\n3.7\n6.3\n5.375\nFalse\n0\n0\n200000000\n2.330396\n336365676\n0.420048\n1.681828\n33.199\n\n\n4\ntt1981115\nthor the dark world\n2013\n2013-10-30\nOctober\npg-13\nthor fights restore order cosmos… ancient race...\n['superhero based on comic hostile takeover no...\naction\nalan taylor\n['chris hemsworth natalie portman tom hiddlest...\n112\n5.4\n6.7\n6.7\n6.5\n6.325\nFalse\n0\n0\n170000000\n1.827172\n644783140\n1.575075\n3.792842\n50.246\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Remove brakcets and apostrophes from the Actors column\nmovies_df[\"Actors\"] = movies_df[\"Actors\"].str.replace(\"[\", \"\", regex = False).str.replace(\"]\", \"\", regex = False).str.replace(\"'\", \"\", regex = False)\n\n# Drop columns that won't be included in the cosine similarity calculation\ncolumns_to_drop = [\"IMDB_ID\", \"Keywords\", \"Won_Award\", \"Release_Date\", \"Release_Month\", \"Age_Rating\", \"Budget\", \"Revenue\"]\nfiltered_movies_df = movies_df.drop(columns = columns_to_drop)\n\n# PReview the new dataframe\nfiltered_movies_df.head(5)\n\n\n\n\n\n\n\n\n\nTitle\nYear\nOverview\nGenre\nDirector\nActors\nRuntime\nMetascore_Rating\nIMDB_Rating\nRotten_Tomatoes_Rating\nTMDB_Rating\nAverage_Rating\nOscar_Wins\nOscar_Nominations\nBudget_Normalized\nRevenue_Normalized\nReturn_On_Investment\nPopularity\n\n\n\n\n0\nhenry v\n1989\ngritty adaption william shakespeares play engl...\nwar\nkenneth branagh\nkenneth branagh derek jacobi simon shepherd\n137\n8.3\n7.5\n9.8\n7.2\n8.200\n1\n0\n-0.873465\n-0.801446\n1.133333\n18.771\n\n\n1\nthe expendables\n2010\nbarney ross leads band highly skilled mercenar...\nthriller\nsylvester stallone\nsylvester stallone jason statham jet li\n103\n4.5\n6.4\n4.2\n6.2\n5.325\n0\n0\n0.317499\n0.188250\n3.430880\n74.573\n\n\n2\ngemini man\n2019\nhenry brogan elite 51 year assassin whos ready...\nthriller\nang lee\nwill smith mary elizabeth winstead clive owen\n117\n3.8\n5.7\n2.7\n6.3\n4.625\n0\n0\n1.323948\n-0.189999\n1.239068\n27.266\n\n\n3\nprince of persia the sands of time\n2010\nrogue prince reluctantly joins forces mysterio...\naction\nmike newell\njake gyllenhaal gemma arterton ben kingsley\n116\n5.0\n6.5\n3.7\n6.3\n5.375\n0\n0\n2.330396\n0.420048\n1.681828\n33.199\n\n\n4\nthor the dark world\n2013\nthor fights restore order cosmos… ancient race...\naction\nalan taylor\nchris hemsworth natalie portman tom hiddleston\n112\n5.4\n6.7\n6.7\n6.5\n6.325\n0\n0\n1.827172\n1.575075\n3.792842\n50.246"
  },
  {
    "objectID": "recommender.html#load-the-dataset",
    "href": "recommender.html#load-the-dataset",
    "title": "Movie-Recommendation Model",
    "section": "",
    "text": "Code\n# Load the cleaned movies dataframe\nmovies_df = pd.read_csv(\"./data/processed-data/movies_cleaned.csv\")\n\npd.set_option(\"display.max_columns\", None)\nmovies_df.head(5)\n\n\n\n\n\n\n\n\n\nIMDB_ID\nTitle\nYear\nRelease_Date\nRelease_Month\nAge_Rating\nOverview\nKeywords\nGenre\nDirector\nActors\nRuntime\nMetascore_Rating\nIMDB_Rating\nRotten_Tomatoes_Rating\nTMDB_Rating\nAverage_Rating\nWon_Award\nOscar_Wins\nOscar_Nominations\nBudget\nBudget_Normalized\nRevenue\nRevenue_Normalized\nReturn_On_Investment\nPopularity\n\n\n\n\n0\ntt0097499\nhenry v\n1989\n1989-10-05\nOctober\npg-13\ngritty adaption william shakespeares play engl...\n['france kingdom theater play based on true st...\nwar\nkenneth branagh\n['kenneth branagh derek jacobi simon shepherd']\n137\n8.3\n7.5\n9.8\n7.2\n8.200\nTrue\n1\n0\n9000000\n-0.873465\n10200000\n-0.801446\n1.133333\n18.771\n\n\n1\ntt1320253\nthe expendables\n2010\n2010-08-03\nAugust\nr\nbarney ross leads band highly skilled mercenar...\n['rescue sniper island martial arts tattoo esc...\nthriller\nsylvester stallone\n['sylvester stallone jason statham jet li']\n103\n4.5\n6.4\n4.2\n6.2\n5.325\nFalse\n0\n0\n80000000\n0.317499\n274470394\n0.188250\n3.430880\n74.573\n\n\n2\ntt1025100\ngemini man\n2019\n2019-10-02\nOctober\npg-13\nhenry brogan elite 51 year assassin whos ready...\n['hitman clone']\nthriller\nang lee\n['will smith mary elizabeth winstead clive owen']\n117\n3.8\n5.7\n2.7\n6.3\n4.625\nFalse\n0\n0\n140000000\n1.323948\n173469516\n-0.189999\n1.239068\n27.266\n\n\n3\ntt0473075\nprince of persia the sands of time\n2010\n2010-05-19\nMay\npg-13\nrogue prince reluctantly joins forces mysterio...\n['persia sandstorm brother against brother arm...\naction\nmike newell\n['jake gyllenhaal gemma arterton ben kingsley']\n116\n5.0\n6.5\n3.7\n6.3\n5.375\nFalse\n0\n0\n200000000\n2.330396\n336365676\n0.420048\n1.681828\n33.199\n\n\n4\ntt1981115\nthor the dark world\n2013\n2013-10-30\nOctober\npg-13\nthor fights restore order cosmos… ancient race...\n['superhero based on comic hostile takeover no...\naction\nalan taylor\n['chris hemsworth natalie portman tom hiddlest...\n112\n5.4\n6.7\n6.7\n6.5\n6.325\nFalse\n0\n0\n170000000\n1.827172\n644783140\n1.575075\n3.792842\n50.246"
  },
  {
    "objectID": "recommender.html#clean-the-dataset",
    "href": "recommender.html#clean-the-dataset",
    "title": "Movie-Recommendation Model",
    "section": "",
    "text": "Code\n# Remove brakcets and apostrophes from the Actors column\nmovies_df[\"Actors\"] = movies_df[\"Actors\"].str.replace(\"[\", \"\", regex = False).str.replace(\"]\", \"\", regex = False).str.replace(\"'\", \"\", regex = False)\n\n# Drop columns that won't be included in the cosine similarity calculation\ncolumns_to_drop = [\"IMDB_ID\", \"Keywords\", \"Won_Award\", \"Release_Date\", \"Release_Month\", \"Age_Rating\", \"Budget\", \"Revenue\"]\nfiltered_movies_df = movies_df.drop(columns = columns_to_drop)\n\n# PReview the new dataframe\nfiltered_movies_df.head(5)\n\n\n\n\n\n\n\n\n\nTitle\nYear\nOverview\nGenre\nDirector\nActors\nRuntime\nMetascore_Rating\nIMDB_Rating\nRotten_Tomatoes_Rating\nTMDB_Rating\nAverage_Rating\nOscar_Wins\nOscar_Nominations\nBudget_Normalized\nRevenue_Normalized\nReturn_On_Investment\nPopularity\n\n\n\n\n0\nhenry v\n1989\ngritty adaption william shakespeares play engl...\nwar\nkenneth branagh\nkenneth branagh derek jacobi simon shepherd\n137\n8.3\n7.5\n9.8\n7.2\n8.200\n1\n0\n-0.873465\n-0.801446\n1.133333\n18.771\n\n\n1\nthe expendables\n2010\nbarney ross leads band highly skilled mercenar...\nthriller\nsylvester stallone\nsylvester stallone jason statham jet li\n103\n4.5\n6.4\n4.2\n6.2\n5.325\n0\n0\n0.317499\n0.188250\n3.430880\n74.573\n\n\n2\ngemini man\n2019\nhenry brogan elite 51 year assassin whos ready...\nthriller\nang lee\nwill smith mary elizabeth winstead clive owen\n117\n3.8\n5.7\n2.7\n6.3\n4.625\n0\n0\n1.323948\n-0.189999\n1.239068\n27.266\n\n\n3\nprince of persia the sands of time\n2010\nrogue prince reluctantly joins forces mysterio...\naction\nmike newell\njake gyllenhaal gemma arterton ben kingsley\n116\n5.0\n6.5\n3.7\n6.3\n5.375\n0\n0\n2.330396\n0.420048\n1.681828\n33.199\n\n\n4\nthor the dark world\n2013\nthor fights restore order cosmos… ancient race...\naction\nalan taylor\nchris hemsworth natalie portman tom hiddleston\n112\n5.4\n6.7\n6.7\n6.5\n6.325\n0\n0\n1.827172\n1.575075\n3.792842\n50.246"
  },
  {
    "objectID": "recommender.html#compute-cosine-similarity-scores-for-numerical-data",
    "href": "recommender.html#compute-cosine-similarity-scores-for-numerical-data",
    "title": "Movie-Recommendation Model",
    "section": "Compute Cosine Similarity Scores for Numerical Data",
    "text": "Compute Cosine Similarity Scores for Numerical Data\n\n\nCode\n# Filter the df to only include numerical columns\nnumerical_features = [\"Runtime\", \"Metascore_Rating\", \"IMDB_Rating\", \"Rotten_Tomatoes_Rating\", \"TMDB_Rating\", \"Average_Rating\", \n                      \"Oscar_Wins\", \"Return_On_Investment\", \"Budget_Normalized\", \"Revenue_Normalized\", \"Popularity\"]\n\n# Scale the values so that one column does not have an extreme bias towards the cosine similarity scores\nscaler = MinMaxScaler()\nscaled_features = scaler.fit_transform(filtered_movies_df[numerical_features])\n\n# Calculate numerical cosine similarity scores for each movie\nnumerical_cos_similarity = cosine_similarity(scaled_features)"
  },
  {
    "objectID": "recommender.html#determine-cosine-similarity-score-weights-for-each-datatype",
    "href": "recommender.html#determine-cosine-similarity-score-weights-for-each-datatype",
    "title": "Movie-Recommendation Model",
    "section": "Determine Cosine Similarity Score Weights for Each Datatype",
    "text": "Determine Cosine Similarity Score Weights for Each Datatype\n\n\nCode\n# Set weights for each cosine similarity scores to determine whether text or numerical data has more say in the recommendations\ntext_weight = 0.25\nnumerical_weight = 0.75\n\n# Create a combined cosine similarity score that uses both text and numerical features\ncombined_similarity = text_weight * text_cos_similarity + numerical_weight * numerical_cos_similarity"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction",
    "section": "",
    "text": "Back to top"
  }
]