[
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "Move Recommendation Results",
    "section": "",
    "text": "This section presents example outputs from the hybrid movie recommender system. The model uses a weighted combination of textual similarity (derived from movie overviews, genres, directors, and actors using TF-IDF) and numerical similarity (based on ratings, financial metrics, and popularity). The weighting used for these examples assigns 75% importance to numerical features and 25% to textual features.\nTo demonstrate the model’s recommendations, we selected several well-known films across different genres and display their top 10 most similar movies based on the combined similarity score. For each case, we provide the movie’s metadata alongside the recommended titles and their similarity rankings.\n\n\n\n\n\n \n\n\nInterstellar (2024)\n\n\n\n\n\n\n\n\n\nTitle\nYear\nAge_Rating\nGenre\nRuntime\nDirector\nActors\nAverage_Rating\nOscar_Wins\n\n\n\n\n0\ninterstellar\n2014\npg-13\ndrama\n169\nchristopher nolan\nmatthew mcconaughey anne hathaway jessica chas...\n7.95\n1\n\n\n\n\n\n\n\n\n\n\n\nTop 10 Recommendations\n\n\n\n\n\n\n\n\n\nTitle\nYear\nAge_Rating\nGenre\nDirector\nAverage_Rating\nSimilarity_Score\n\n\n\n\n1\ncontact\n1997\npg\ndrama\nrobert zemeckis\n6.975\n0.7687\n\n\n2\nthe dark knight rises\n2012\npg-13\naction\nchristopher nolan\n8.175\n0.7652\n\n\n3\ntenet\n2020\npg-13\nscience fiction\nchristopher nolan\n7.100\n0.7639\n\n\n4\nthe dark knight\n2008\npg-13\ncrime\nchristopher nolan\n8.825\n0.7571\n\n\n5\ninception\n2010\npg-13\nscience fiction\nchristopher nolan\n8.325\n0.7570\n\n\n6\nthe huntsman winters war\n2016\npg-13\ndrama\ncedric nicolas-troyan\n4.475\n0.7570\n\n\n7\nthe martian\n2015\npg-13\nscience fiction\nridley scott\n8.200\n0.7567\n\n\n8\nprometheus\n2012\nr\nscience fiction\nridley scott\n6.825\n0.7565\n\n\n9\nmechanic resurrection\n2016\nr\nthriller\ndennis gansel\n4.650\n0.7554\n\n\n10\nthe matrix\n1999\nr\nscience fiction\nlana wachowski, lilly wachowski\n8.125\n0.7548\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\nTroy (2004)\n\n\n\n\n\n\n\n\n\nTitle\nYear\nAge_Rating\nGenre\nRuntime\nDirector\nActors\nAverage_Rating\nOscar_Wins\n\n\n\n\n0\ntroy\n2004\nr\nwar\n163\nwolfgang petersen\nbrad pitt eric bana orlando bloom\n6.35\n0\n\n\n\n\n\n\n\n\n\n\n\nTop 10 Recommendations\n\n\n\n\n\n\n\n\n\nTitle\nYear\nAge_Rating\nGenre\nDirector\nAverage_Rating\nSimilarity_Score\n\n\n\n\n1\nkingdom of heaven\n2005\nr\naction\nridley scott\n6.125\n0.7688\n\n\n2\npirates of the caribbean the curse of the blac...\n2003\npg-13\naction\ngore verbinski\n7.525\n0.7644\n\n\n3\nsnow white and the huntsman\n2012\npg-13\ndrama\nrupert sanders\n5.650\n0.7592\n\n\n4\noceans twelve\n2004\npg-13\ncrime\nsteven soderbergh\n6.100\n0.7576\n\n\n5\nthe day after tomorrow\n2004\npg-13\naction\nroland emmerich\n5.550\n0.7555\n\n\n6\nwaterworld\n1995\npg-13\naction\nkevin reynolds\n5.675\n0.7549\n\n\n7\nfantastic beasts the secrets of dumbledore\n2022\npg-13\nfantasy\ndavid yates\n5.550\n0.7548\n\n\n8\nposeidon\n2006\npg-13\ndrama\nwolfgang petersen\n4.950\n0.7544\n\n\n9\npower rangers\n2017\npg-13\nscience fiction\ndean israelite\n5.425\n0.7528\n\n\n10\nrobocop\n2014\npg-13\nscience fiction\njosé padilha\n5.550\n0.7528\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\nTreasure Planet (2002)\n\n\n\n\n\n\n\n\n\nTitle\nYear\nAge_Rating\nGenre\nRuntime\nDirector\nActors\nAverage_Rating\nOscar_Wins\n\n\n\n\n0\ntreasure planet\n2002\npg\nscience fiction\n95\nron clements, john musker\njoseph gordon levitt emma thompson martin short\n6.925\n0\n\n\n\n\n\n\n\n\n\n\n\nTop 10 Recommendations\n\n\n\n\n\n\n\n\n\nTitle\nYear\nAge_Rating\nGenre\nDirector\nAverage_Rating\nSimilarity_Score\n\n\n\n\n1\nthe princess and the frog\n2009\ng\nfantasy\nron clements, john musker\n7.550\n0.7860\n\n\n2\nmoana\n2016\npg\ncomedy\nron clements, john musker, don hall\n8.200\n0.7779\n\n\n3\nlightyear\n2022\npg\nscience fiction\nangus maclane\n6.625\n0.7764\n\n\n4\nmuppet treasure island\n1996\ng\nmusic\nbrian henson\n6.750\n0.7658\n\n\n5\nhome\n2015\npg\nfantasy\ntim johnson\n6.025\n0.7652\n\n\n6\natlantis the lost empire\n2001\npg\nscience fiction\ngary trousdale, kirk wise\n5.975\n0.7614\n\n\n7\ninception\n2010\npg-13\nscience fiction\nchristopher nolan\n8.325\n0.7605\n\n\n8\nspirit stallion of the cimarron\n2002\ng\nromance\nkelly asbury, lorna cook\n6.750\n0.7603\n\n\n9\ntimecop\n1994\nr\ncrime\npeter hyams\n5.225\n0.7601\n\n\n10\nwall·e\n2008\ng\nscience fiction\nandrew stanton\n8.875\n0.7600\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "methods.html",
    "href": "methods.html",
    "title": "Methods",
    "section": "",
    "text": "This section outlines the methodological framework used to develop a hybrid content-based Movie Recommender System. The system combines natural language processing and numerical data analysis to compute similarity scores between films and generate personalized recommendations. The approach integrates text vectorization with TF-IDF, feature scaling of numerical metadata, and cosine similarity to measure relational distance between movies. The final model fuses both similarity scores using a weighted linear combination, allowing for flexibility in tuning the relative importance of textual versus numerical features.\nThe methodology emphasizes the preprocessing of feature sets, construction of similarity matrices, and the design of the scoring function that powers the recommendation engine.\n\nText Feature Engineering\nTo extract meaningful patterns from the descriptive attributes of movies, a combined textual feature was created by concatenating each film’s overview, genre, director, and lead actors. This enriched string was used as input for a TF-IDF (Term Frequency–Inverse Document Frequency) vectorizer, which transforms raw text into a high-dimensional vector space.\nTF-IDF is effective at emphasizing terms that are unique or relevant to specific documents while down-weighting frequently occurring but less informative words. The output is a sparse matrix where each movie is represented as a TF-IDF vector. Cosine similarity is then applied to this matrix to compute pairwise textual similarity scores between all movies in the dataset.\n\n\nNumerical Feature Processing\nTo complement the textual descriptors, a set of structured numerical features was selected. These include both performance and financial metrics such as:\n\nRuntime\nAverage Ratings (IMDB, TMDB, Metascore, Rotten Tomatoes)\nOscar Wins\nBudget & Revenue (normalized)\nReturn on Investment\nPopularity\n\nBefore computing similarity, all numerical attributes were scaled using Min-Max normalization, ensuring that each feature contributes equally to the similarity calculation. A second cosine similarity matrix was generated based on these scaled numerical vectors, capturing relationships between films based on their quantitative profiles.\n\n\nCosine Similarity\nCosine similarity is the core distance metric used to quantify how similar two movies are based on either their text-based or numerical feature vectors. It measures the cosine of the angle between two non-zero vectors in a multi-dimensional space and is defined as:\n\\(\\text{cosine\\_similarity}(A, B) = \\frac{A \\cdot B}{\\|A\\| \\cdot \\|B\\|}\\)\nWhere:\n\n\\(A \\cdot B\\) = dot product of vectors A and B\n\\(\\|A\\|\\) = Euclidean norm (magnitude) of vector A\n\\(\\|B\\|\\) = Euclidean norm (magnitude) of vector B\n\nThe resulting value ranges from 0 (no similarity) to 1 (identical direction), making it well-suited for comparing movies based on the direction of feature importance rather than absolute magnitudes. This is particularly effective in high-dimensional spaces such as those created by TF-IDF or scaled numeric vectors.\nSeparate cosine similarity matrices were computed for:\n\nTextual features (via TF-IDF)\nScaled numerical features\n\n\n\nHybrid Similarity Scoring\nTo create a unified recommendation model, the text-based and number-based similarity scores were combined through a weighted sum:\ncombined_similarity = text_weight x text_cos_similarity + numerical_weight x numerical_cos_similarity\nThe default configuration assigns a greater emphasis to numerical similarity (75% numerical, 25% text), reflecting the assumption that films with similar popularity, critical acclaim, and financial success tend to be more comparable in audience appeal. However, the weights can be adjusted to prioritize textual content, such as plot themes or cast overlap, depending on use-case preferences.\n\n\nRecommendation Function\nThe final recommendation function takes a movie title as input, locates its index in the dataset, retrieves the corresponding row from the combined similarity matrix, and ranks all other movies based on their similarity scores. The top N most similar movies (excluding the input film) are returned as recommendations, along with key metadata fields and their corresponding similarity scores.\nThe result is a user-interpretable recommendation table that reflects both the thematic and statistical alignment between the queried movie and its most similar counterparts.\n\n\nSummary\nBy integrating both textual analysis and quantitative metrics, this hybrid recommender captures a richer, more nuanced notion of movie similarity. Unlike genre-only systems or purely collaborative filters, this method is content-aware and operates independently of user behavior data, making it ideal for cold-start scenarios, portfolio analysis, or standalone media exploration tools.\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "data_collection.html",
    "href": "data_collection.html",
    "title": "Data Collection and Cleaning",
    "section": "",
    "text": "Feature Table\n\n\n\n\n\n\n\n\nColumn Name\nData Type\nDescription\n\n\n\n\nTitle\nstring\nName of the movie\n\n\nYear\nint\nRelease year of the movie\n\n\nOverview\nstring\nBrief summary of the movie plot\n\n\nGenre\nstring\nMovie genre(s) (e.g., Action, Drama)\n\n\nDirector\nstring\nName(s) of the movie director(s)\n\n\nActors\nstring\nLead actors featured in the movie\n\n\nRuntime\nint\nTotal runtime of the movie in minutes\n\n\nMetascore_Rating\nfloat\nMetacritic score of the movie\n\n\nIMDB_Rating\nfloat\nIMDb rating for the movie\n\n\nRotten_Tomatoes_Rating\nfloat\nRotten Tomatoes score (percentage)\n\n\nTMDB_Rating\nfloat\nThe Movie Database (TMDB) rating\n\n\nAverage_Rating\nfloat\nCombined average rating across platforms\n\n\nOscar_Wins\nint\nNumber of Academy Awards won\n\n\nOscar_Nominations\nint\nTotal Oscar nominations received\n\n\nBudget_Normalized\nfloat\nAdjusted budget value for analysis\n\n\nRevenue_Normalized\nfloat\nAdjusted revenue value for analysis\n\n\nReturn_On_Investment\nfloat\nProfitability measure based on budget & revenue\n\n\nPopularity\nfloat\nMetric representing audience interest\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Movie Recommendation Model",
    "section": "",
    "text": "Understanding movie similarity is a central challenge in modern recommendation systems, especially for streaming services, entertainment platforms, and media analytics. While traditional genre labels like “Action” or “Comedy” offer a general categorization, more nuanced comparisons, such as theme, tone, critical success, and cast composition, are essential for meaningful recommendations. This project aims to recommend similar movies using a hybrid content-based approach that combines both textual descriptors and numerical performance indicators. Two sets of features are used: one derived from natural language (plot overviews, genres, directors, actors) and another from structured movie metadata (ratings, budget, box office returns). These features are processed using cosine similarity metrics and combined with weighted fusion."
  },
  {
    "objectID": "index.html#pirates-of-the-caribbean-the-curse-of-the-black-pearl-2003",
    "href": "index.html#pirates-of-the-caribbean-the-curse-of-the-black-pearl-2003",
    "title": "Movie Recommendation Model",
    "section": "Pirates of the Caribbean: The Curse of the Black Pearl (2003)",
    "text": "Pirates of the Caribbean: The Curse of the Black Pearl (2003)\n\n\n\n\n \n\nThis action-adventure film stars Johnny Depp as Captain Jack Sparrow and is characterized by its fantasy elements, seafaring setting, and comedic undertones. It features high production value, strong box office performance, and a genre blend of action, fantasy, and comedy. Textually, it includes terms like “cursed treasure”, “pirates”, and “swashbuckling,” while numerically, it scores well on IMDB and TMDB, with a high return on investment."
  },
  {
    "objectID": "index.html#national-treasure-2004",
    "href": "index.html#national-treasure-2004",
    "title": "Movie Recommendation Model",
    "section": "National Treasure (2004)",
    "text": "National Treasure (2004)\n\n\n\n\n \n\nStarring Nicolas Cage, National Treasure combines historical intrigue with action and treasure-hunting themes. It shares textual similarities with Pirates of the Caribbean in terms of pacing, adventure, and plot structure involving hidden clues and ancient secrets. Numerically, it also performs well with solid ratings and strong revenue, aligning closely with Pirates of the Carribean in both style and reception."
  },
  {
    "objectID": "index.html#the-mummy-1999",
    "href": "index.html#the-mummy-1999",
    "title": "Movie Recommendation Model",
    "section": "The Mummy (1999)",
    "text": "The Mummy (1999)\n\n\n\n\n \n\nA supernatural adventure with elements of romance, horror, and mythology, The Mummy features Brendan Fraser as the protagonist in a tale that also blends action with fantasy and historical references. Similar to Pirates of the Caribbean, it contains themes of curses, ancient lore, and large-scale set pieces. Its descriptive features (“archaeologist”, “ancient Egypt”, “undead”) align textually with those of Pirates of the Caribbean, while its strong box office and moderate critic ratings reflect similar audience appeal.\n\n\nBy comparing the narrative structure, genre alignment, and performance metrics of these three films, we see how hybrid feature modeling captures the essence of movie similarity more effectively than genre tags alone. For example, while Pirates of the Caribbean of the Caribbean and The Lord of the Rings might both be labeled as “fantasy,” their tone, pacing, and character dynamics differ significantly. In contrast, movies like National Treasure and The Mummy, though labeled differently, often appeal to similar audiences due to shared thematic elements and viewing experiences.\nThese role-specific feature patterns, whether textual (plot summaries) or numerical (critic scores, budget performance), make movie datasets ideal for content-based recommendation systems. The consistent structure of movie attributes allows models to learn association patterns with high precision. In this project, these characteristics are leveraged to train a hybrid model that fuses TF-IDF vectorized text features with scaled numerical metadata, resulting in highly interpretable and customizable recommendations that go beyond basic genre matching."
  },
  {
    "objectID": "movie_game.html",
    "href": "movie_game.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\n\n\n  Guess a Movie:\n  \n    \n    Submit Guess\n  \n\n  \n\n  \n\n\n\n\n\n\nRank\nTitle\nYear\nAge Rating\nGenre\nDirector\nAvg Rating\nSimilarity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  }
]